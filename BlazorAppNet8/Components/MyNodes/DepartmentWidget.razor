@using Blazor.Diagrams.Components.Renderers;
@using Blazor.Diagrams.Core.Models;
@using BlazorAppNet8.Classes;

<MudPaper class="departmentNode d-flex flex-column pa-2 ma-2 justify-content-center align-items-center" Elevation="3">
    <MudText Typo="Typo.h6">@Node.Department.Name</MudText>

    <MudButtonGroup Variant="Variant.Outlined">
        <MudIconButton Icon="@Icons.Material.Filled.Add" OnClick="AddChildDepartment">Add</MudIconButton>
        <MudIconButton Icon="@Icons.Material.Filled.Delete" OnClick="DeleteDepartment">Del</MudIconButton>
        <MudIconButton Icon="@Icons.Material.Filled.ExpandMore" OnClick="ToggleChildren">Toggle</MudIconButton>
    </MudButtonGroup>

    @foreach (var port in Node.Ports)
    {
        <PortRenderer @key="port" Port="port" />
    }
</MudPaper>

@code {
    [Parameter]
    public DepartmentNode Node { get; set; } = null!;

    [CascadingParameter]
    public MyDiagram ParentComponent { get; set; } = null!;

    private void DeleteDepartment()
    {
        ParentComponent.DeleteDepartment(Node.Department.Id);
    }

    private void AddChildDepartment()
    {
        ParentComponent.AddChildDepartment(Node.Department.Id);
    }

    private void ToggleChildren()
    {
        Node.OnToggleChildren?.Invoke();
    }
}
<style>
    .departmentNode {
        max-width: 200px;
    }
</style>